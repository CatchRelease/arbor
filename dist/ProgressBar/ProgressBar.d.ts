export default ProgressBar;
declare function ProgressBar({ percentage, iconEndName, showPercentage, ...props }: {
    [x: string]: any;
    percentage: any;
    iconEndName: any;
    showPercentage: any;
}): import("@emotion/react/jsx-runtime").JSX.Element;
declare namespace ProgressBar {
    namespace propTypes {
        const showPercentage: PropTypes.Requireable<boolean>;
        const iconEndName: PropTypes.Requireable<string>;
        const percentage: PropTypes.Validator<number>;
    }
    const defaultProps: {
        showPercentage: boolean;
        iconEndName: null;
        as?: import("react").ElementType<any> | undefined;
        slot?: string | undefined;
        style?: import("react").CSSProperties | undefined;
        title?: string | undefined;
        children?: import("react").ReactNode;
        hidden?: boolean | undefined;
        defaultChecked?: boolean | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;
        accessKey?: string | undefined;
        className?: string | undefined;
        contentEditable?: "inherit" | (boolean | "false" | "true") | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: (boolean | "false" | "true") | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        placeholder?: string | undefined;
        spellCheck?: (boolean | "false" | "true") | undefined;
        tabIndex?: number | undefined;
        translate?: "yes" | "no" | undefined;
        radioGroup?: string | undefined;
        role?: import("react").AriaRole | undefined;
        about?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        resource?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: "on" | "off" | undefined;
        inputMode?: "text" | "search" | "none" | "tel" | "url" | "email" | "numeric" | "decimal" | undefined;
        is?: string | undefined;
        'aria-activedescendant'?: string | undefined;
        'aria-atomic'?: boolean | "false" | "true" | undefined;
        'aria-autocomplete'?: "none" | "both" | "inline" | "list" | undefined;
        'aria-busy'?: boolean | "false" | "true" | undefined;
        'aria-checked'?: boolean | "mixed" | "false" | "true" | undefined;
        'aria-colcount'?: number | undefined;
        'aria-colindex'?: number | undefined;
        'aria-colspan'?: number | undefined;
        'aria-controls'?: string | undefined;
        'aria-current'?: boolean | "time" | "page" | "false" | "true" | "step" | "location" | "date" | undefined;
        'aria-describedby'?: string | undefined;
        'aria-details'?: string | undefined;
        'aria-disabled'?: boolean | "false" | "true" | undefined;
        'aria-dropeffect'?: "link" | "none" | "copy" | "move" | "execute" | "popup" | undefined;
        'aria-errormessage'?: string | undefined;
        'aria-expanded'?: boolean | "false" | "true" | undefined;
        'aria-flowto'?: string | undefined;
        'aria-grabbed'?: boolean | "false" | "true" | undefined;
        'aria-haspopup'?: boolean | "dialog" | "menu" | "grid" | "listbox" | "false" | "true" | "tree" | undefined;
        'aria-hidden'?: boolean | "false" | "true" | undefined;
        'aria-invalid'?: boolean | "false" | "true" | "grammar" | "spelling" | undefined;
        'aria-keyshortcuts'?: string | undefined;
        'aria-label'?: string | undefined;
        'aria-labelledby'?: string | undefined;
        'aria-level'?: number | undefined;
        'aria-live'?: "off" | "assertive" | "polite" | undefined;
        'aria-modal'?: boolean | "false" | "true" | undefined;
        'aria-multiline'?: boolean | "false" | "true" | undefined;
        'aria-multiselectable'?: boolean | "false" | "true" | undefined;
        'aria-orientation'?: "horizontal" | "vertical" | undefined;
        'aria-owns'?: string | undefined;
        'aria-placeholder'?: string | undefined;
        'aria-posinset'?: number | undefined;
        'aria-pressed'?: boolean | "mixed" | "false" | "true" | undefined;
        'aria-readonly'?: boolean | "false" | "true" | undefined;
        'aria-relevant'?: "text" | "all" | "additions" | "additions removals" | "additions text" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined;
        'aria-required'?: boolean | "false" | "true" | undefined;
        'aria-roledescription'?: string | undefined;
        'aria-rowcount'?: number | undefined;
        'aria-rowindex'?: number | undefined;
        'aria-rowspan'?: number | undefined;
        'aria-selected'?: boolean | "false" | "true" | undefined;
        'aria-setsize'?: number | undefined;
        'aria-sort'?: "none" | "ascending" | "descending" | "other" | undefined;
        'aria-valuemax'?: number | undefined;
        'aria-valuemin'?: number | undefined;
        'aria-valuenow'?: number | undefined;
        'aria-valuetext'?: string | undefined;
        dangerouslySetInnerHTML?: {
            __html: string;
        } | undefined;
        onCopy?: import("react").ClipboardEventHandler<HTMLElement> | undefined;
        onCopyCapture?: import("react").ClipboardEventHandler<HTMLElement> | undefined;
        onCut?: import("react").ClipboardEventHandler<HTMLElement> | undefined;
        onCutCapture?: import("react").ClipboardEventHandler<HTMLElement> | undefined;
        onPaste?: import("react").ClipboardEventHandler<HTMLElement> | undefined;
        onPasteCapture?: import("react").ClipboardEventHandler<HTMLElement> | undefined;
        onCompositionEnd?: import("react").CompositionEventHandler<HTMLElement> | undefined;
        onCompositionEndCapture?: import("react").CompositionEventHandler<HTMLElement> | undefined;
        onCompositionStart?: import("react").CompositionEventHandler<HTMLElement> | undefined;
        onCompositionStartCapture?: import("react").CompositionEventHandler<HTMLElement> | undefined;
        onCompositionUpdate?: import("react").CompositionEventHandler<HTMLElement> | undefined;
        onCompositionUpdateCapture?: import("react").CompositionEventHandler<HTMLElement> | undefined;
        onFocus?: import("react").FocusEventHandler<HTMLElement> | undefined;
        onFocusCapture?: import("react").FocusEventHandler<HTMLElement> | undefined;
        onBlur?: import("react").FocusEventHandler<HTMLElement> | undefined;
        onBlurCapture?: import("react").FocusEventHandler<HTMLElement> | undefined;
        onChange?: import("react").FormEventHandler<HTMLElement> | undefined;
        onChangeCapture?: import("react").FormEventHandler<HTMLElement> | undefined;
        onBeforeInput?: import("react").FormEventHandler<HTMLElement> | undefined;
        onBeforeInputCapture?: import("react").FormEventHandler<HTMLElement> | undefined;
        onInput?: import("react").FormEventHandler<HTMLElement> | undefined;
        onInputCapture?: import("react").FormEventHandler<HTMLElement> | undefined;
        onReset?: import("react").FormEventHandler<HTMLElement> | undefined;
        onResetCapture?: import("react").FormEventHandler<HTMLElement> | undefined;
        onSubmit?: import("react").FormEventHandler<HTMLElement> | undefined;
        onSubmitCapture?: import("react").FormEventHandler<HTMLElement> | undefined;
        onInvalid?: import("react").FormEventHandler<HTMLElement> | undefined;
        onInvalidCapture?: import("react").FormEventHandler<HTMLElement> | undefined;
        onLoad?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onLoadCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onError?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onErrorCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onKeyDown?: import("react").KeyboardEventHandler<HTMLElement> | undefined;
        onKeyDownCapture?: import("react").KeyboardEventHandler<HTMLElement> | undefined;
        onKeyPress?: import("react").KeyboardEventHandler<HTMLElement> | undefined;
        onKeyPressCapture?: import("react").KeyboardEventHandler<HTMLElement> | undefined;
        onKeyUp?: import("react").KeyboardEventHandler<HTMLElement> | undefined;
        onKeyUpCapture?: import("react").KeyboardEventHandler<HTMLElement> | undefined;
        onAbort?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onAbortCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onCanPlay?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onCanPlayCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onCanPlayThrough?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onCanPlayThroughCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onDurationChange?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onDurationChangeCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onEmptied?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onEmptiedCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onEncrypted?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onEncryptedCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onEnded?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onEndedCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onLoadedData?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onLoadedDataCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onLoadedMetadata?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onLoadedMetadataCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onLoadStart?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onLoadStartCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onPause?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onPauseCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onPlay?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onPlayCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onPlaying?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onPlayingCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onProgress?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onProgressCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onRateChange?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onRateChangeCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onSeeked?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onSeekedCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onSeeking?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onSeekingCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onStalled?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onStalledCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onSuspend?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onSuspendCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onTimeUpdate?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onTimeUpdateCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onVolumeChange?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onVolumeChangeCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onWaiting?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onWaitingCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onAuxClick?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onAuxClickCapture?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onClick?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onClickCapture?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onContextMenu?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onContextMenuCapture?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onDoubleClick?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onDoubleClickCapture?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onDrag?: import("react").DragEventHandler<HTMLElement> | undefined;
        onDragCapture?: import("react").DragEventHandler<HTMLElement> | undefined;
        onDragEnd?: import("react").DragEventHandler<HTMLElement> | undefined;
        onDragEndCapture?: import("react").DragEventHandler<HTMLElement> | undefined;
        onDragEnter?: import("react").DragEventHandler<HTMLElement> | undefined;
        onDragEnterCapture?: import("react").DragEventHandler<HTMLElement> | undefined;
        onDragExit?: import("react").DragEventHandler<HTMLElement> | undefined;
        onDragExitCapture?: import("react").DragEventHandler<HTMLElement> | undefined;
        onDragLeave?: import("react").DragEventHandler<HTMLElement> | undefined;
        onDragLeaveCapture?: import("react").DragEventHandler<HTMLElement> | undefined;
        onDragOver?: import("react").DragEventHandler<HTMLElement> | undefined;
        onDragOverCapture?: import("react").DragEventHandler<HTMLElement> | undefined;
        onDragStart?: import("react").DragEventHandler<HTMLElement> | undefined;
        onDragStartCapture?: import("react").DragEventHandler<HTMLElement> | undefined;
        onDrop?: import("react").DragEventHandler<HTMLElement> | undefined;
        onDropCapture?: import("react").DragEventHandler<HTMLElement> | undefined;
        onMouseDown?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onMouseDownCapture?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onMouseEnter?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onMouseLeave?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onMouseMove?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onMouseMoveCapture?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onMouseOut?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onMouseOutCapture?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onMouseOver?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onMouseOverCapture?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onMouseUp?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onMouseUpCapture?: import("react").MouseEventHandler<HTMLElement> | undefined;
        onSelect?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onSelectCapture?: import("react").ReactEventHandler<HTMLElement> | undefined;
        onTouchCancel?: import("react").TouchEventHandler<HTMLElement> | undefined;
        onTouchCancelCapture?: import("react").TouchEventHandler<HTMLElement> | undefined;
        onTouchEnd?: import("react").TouchEventHandler<HTMLElement> | undefined;
        onTouchEndCapture?: import("react").TouchEventHandler<HTMLElement> | undefined;
        onTouchMove?: import("react").TouchEventHandler<HTMLElement> | undefined;
        onTouchMoveCapture?: import("react").TouchEventHandler<HTMLElement> | undefined;
        onTouchStart?: import("react").TouchEventHandler<HTMLElement> | undefined;
        onTouchStartCapture?: import("react").TouchEventHandler<HTMLElement> | undefined;
        onPointerDown?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onPointerDownCapture?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onPointerMove?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onPointerMoveCapture?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onPointerUp?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onPointerUpCapture?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onPointerCancel?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onPointerCancelCapture?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onPointerEnter?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onPointerEnterCapture?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onPointerLeave?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onPointerLeaveCapture?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onPointerOver?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onPointerOverCapture?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onPointerOut?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onPointerOutCapture?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onGotPointerCapture?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onGotPointerCaptureCapture?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onLostPointerCapture?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onLostPointerCaptureCapture?: import("react").PointerEventHandler<HTMLElement> | undefined;
        onScroll?: import("react").UIEventHandler<HTMLElement> | undefined;
        onScrollCapture?: import("react").UIEventHandler<HTMLElement> | undefined;
        onWheel?: import("react").WheelEventHandler<HTMLElement> | undefined;
        onWheelCapture?: import("react").WheelEventHandler<HTMLElement> | undefined;
        onAnimationStart?: import("react").AnimationEventHandler<HTMLElement> | undefined;
        onAnimationStartCapture?: import("react").AnimationEventHandler<HTMLElement> | undefined;
        onAnimationEnd?: import("react").AnimationEventHandler<HTMLElement> | undefined;
        onAnimationEndCapture?: import("react").AnimationEventHandler<HTMLElement> | undefined;
        onAnimationIteration?: import("react").AnimationEventHandler<HTMLElement> | undefined;
        onAnimationIterationCapture?: import("react").AnimationEventHandler<HTMLElement> | undefined;
        onTransitionEnd?: import("react").TransitionEventHandler<HTMLElement> | undefined;
        onTransitionEndCapture?: import("react").TransitionEventHandler<HTMLElement> | undefined;
        color?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        bg?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        backgroundColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        opacity?: import("styled-system").ResponsiveValue<import("csstype").Property.Opacity, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        fontSize?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        fontWeight?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        lineHeight?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        maxWidth?: import("styled-system").ResponsiveValue<import("csstype").Property.MaxWidth<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        minWidth?: import("styled-system").ResponsiveValue<import("csstype").Property.MinWidth<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        overflow?: import("styled-system").ResponsiveValue<import("csstype").Property.Overflow, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        overflowX?: import("styled-system").ResponsiveValue<import("csstype").Property.OverflowX, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        overflowY?: import("styled-system").ResponsiveValue<import("csstype").Property.OverflowY, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        m?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        margin?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        mt?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        marginTop?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        mr?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        marginRight?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        mb?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        marginBottom?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        ml?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        marginLeft?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        mx?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        marginX?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        my?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        marginY?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        p?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        padding?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        pt?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        paddingTop?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        pr?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        paddingRight?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        pb?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        paddingBottom?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        pl?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        paddingLeft?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        px?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        paddingX?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        py?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        paddingY?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        textAlign?: import("styled-system").ResponsiveValue<import("csstype").Property.TextAlign, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        textTransform?: import("styled-system").ResponsiveValue<import("csstype").Property.TextTransform, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        textOverflow?: import("styled-system").ResponsiveValue<import("csstype").Property.TextOverflow, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        whiteSpace?: import("styled-system").ResponsiveValue<import("csstype").Property.WhiteSpace, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        border?: import("styled-system").ResponsiveValue<import("csstype").Property.Border<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderX?: import("styled-system").ResponsiveValue<import("csstype").Property.Border<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderY?: import("styled-system").ResponsiveValue<import("csstype").Property.Border<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderWidth?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderTopWidth?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderBottomWidth?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderLeftWidth?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderRightWidth?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderStyle?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderStyle, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderTopStyle?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderTopStyle, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderBottomStyle?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderBottomStyle, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderLeftStyle?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderLeftStyle, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderRightStyle?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderRightStyle, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderTopColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderBottomColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderLeftColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderRightColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderRadius?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderTopLeftRadius?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderTopRightRadius?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderBottomLeftRadius?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderBottomRightRadius?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderTop?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderTop<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderRight?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderRight<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderBottom?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderBottom<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderLeft?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderLeft<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        boxShadow?: import("styled-system").ResponsiveValue<number | import("csstype").Property.BoxShadow, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        display?: import("styled-system").ResponsiveValue<import("csstype").Property.Display, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        height?: import("styled-system").ResponsiveValue<import("csstype").Property.Height<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        gridArea?: import("styled-system").ResponsiveValue<import("csstype").Property.GridArea, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        position?: import("styled-system").ResponsiveValue<import("csstype").Property.Position, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        zIndex?: import("styled-system").ResponsiveValue<import("csstype").Property.ZIndex, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        top?: import("styled-system").ResponsiveValue<import("csstype").Property.Top<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        right?: import("styled-system").ResponsiveValue<import("csstype").Property.Right<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        bottom?: import("styled-system").ResponsiveValue<import("csstype").Property.Bottom<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        left?: import("styled-system").ResponsiveValue<import("csstype").Property.Left<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        width?: import("styled-system").ResponsiveValue<import("csstype").Property.Width<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        theme?: import("@emotion/react").Theme | undefined;
        alignContent?: import("styled-system").ResponsiveValue<import("csstype").Property.AlignContent, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        alignItems?: import("styled-system").ResponsiveValue<import("csstype").Property.AlignItems, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        alignSelf?: import("styled-system").ResponsiveValue<import("csstype").Property.AlignSelf, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        flex?: import("styled-system").ResponsiveValue<import("csstype").Property.Flex<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        flexDirection?: import("styled-system").ResponsiveValue<import("csstype").Property.FlexDirection, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        flexWrap?: import("styled-system").ResponsiveValue<import("csstype").Property.FlexWrap, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        gridGap?: import("styled-system").ResponsiveValue<import("csstype").Property.GridGap<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        justifyContent?: import("styled-system").ResponsiveValue<import("csstype").Property.JustifyContent, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        justifyItems?: import("styled-system").ResponsiveValue<import("csstype").Property.JustifyItems, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        justifySelf?: import("styled-system").ResponsiveValue<import("csstype").Property.JustifySelf, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        order?: import("styled-system").ResponsiveValue<import("csstype").Property.Order, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    };
}
import PropTypes from "prop-types";
