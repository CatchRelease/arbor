// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Tooltip /> properly renders a tooltip 1`] = `
<WithTheme(Tooltip)
  text="Hello World"
>
  <Tooltip
    text="Hello World"
    theme={
      Object {
        "borderRadius": Object {
          "large": "6px",
          "small": "3px",
        },
        "borderWidth": Object {
          "large": "4px",
          "medium": "2px",
          "small": "1px",
        },
        "brandFont": "Motiva Sans",
        "breakpoints": Array [
          "512px",
          "768px",
          "1024px",
          "1600px",
        ],
        "colors": Object {
          "black": "#000000",
          "blue": "#4466EE",
          "blueDark": "#4455CC",
          "blueDarkest": "#2E374E",
          "blueLight": "#5577FF",
          "blueLighter": "#6688FF",
          "bronze": "#CC7700",
          "bronzeDark": "#AA5500",
          "bronzeLight": "#CC9900",
          "green": "#00AA44",
          "greenDark": "#008833",
          "greenLight": "#00BB44",
          "greenLighter": "#00CC66",
          "grey10": "#EEEEEE",
          "grey100": "#222222",
          "grey20": "#DDDDDD",
          "grey30": "#CCCCCC",
          "grey40": "#BBBBBB",
          "grey50": "#AAAAAA",
          "grey60": "#999999",
          "grey70": "#888888",
          "grey80": "#666666",
          "grey90": "#444444",
          "red": "#EE2200",
          "redDark": "#DD1100",
          "redLight": "#FF4444",
          "redLighter": "#FF6655",
          "white": "#FFFFFF",
          "white10": "#F5F5F5",
        },
        "fontSizes": Object {
          "size1": "0.75rem",
          "size2": "0.875rem",
          "size3": "1rem",
          "size4": "1.125rem",
          "size5": "1.375rem",
          "size6": "1.75rem",
          "size7": "2.125rem",
        },
        "fontWeights": Object {
          "bold": 700,
          "medium": 600,
          "regular": 400,
        },
        "iconFontPrefix": "fa",
        "lineHeights": Object {
          "large": 1.5,
          "small": 1.25,
        },
        "space": Object {
          "large": "1.5rem",
          "larger": "2rem",
          "largest": "4rem",
          "regular": "1rem",
          "small": "0.75rem",
          "smaller": "0.5rem",
          "smallest": "0.25rem",
        },
        "typography": Object {
          "text": Object {
            "longForm": Object {
              "color": "#222222",
              "fontSize": "1rem",
            },
            "tiny": Object {
              "color": "#666666",
              "fontSize": "0.75rem",
            },
            "ui": Object {
              "color": "#222222",
              "fontSize": "0.875rem",
            },
          },
        },
      }
    }
  >
    <ForwardRef(render)
      styles={
        Object {
          "map": undefined,
          "name": "957k5c-globalTippyStyles",
          "next": undefined,
          "styles": ".tippy-tooltip.arbor-theme{border-radius:3px;padding:0;}label:globalTippyStyles;",
        }
      }
    >
      <InnerGlobal
        cache={
          Object {
            "insert": [Function],
            "inserted": Object {},
            "key": "css",
            "nonce": undefined,
            "registered": Object {},
            "sheet": StyleSheet {
              "before": null,
              "container": <head>
                <style
                  data-emotion="css-global"
                >
                  
                  .tippy-tooltip.arbor-theme{border-radius:3px;padding:0;}
                </style>
              </head>,
              "ctr": 0,
              "isSpeedy": false,
              "key": "css",
              "nonce": undefined,
              "tags": Array [],
            },
          }
        }
        serialized={
          Object {
            "map": undefined,
            "name": "957k5c-globalTippyStyles",
            "next": undefined,
            "styles": ".tippy-tooltip.arbor-theme{border-radius:3px;padding:0;}label:globalTippyStyles;",
          }
        }
      />
    </ForwardRef(render)>
    <Tooltip
      animateFill={false}
      animation="fade"
      arrow={true}
      arrowSize="small"
      className=""
      delay={0}
      disabled={false}
      distance={8}
      duration={300}
      followCursor={false}
      hideDelay={0}
      hideDuration={375}
      hideOnClick={true}
      html={
        <ForwardRef(render)
          color="white"
          fontSize="size2"
          px="smaller"
          py="smallest"
          theme={
            Object {
              "borderRadius": Object {
                "large": "6px",
                "small": "3px",
              },
              "borderWidth": Object {
                "large": "4px",
                "medium": "2px",
                "small": "1px",
              },
              "brandFont": "Motiva Sans",
              "breakpoints": Array [
                "512px",
                "768px",
                "1024px",
                "1600px",
              ],
              "colors": Object {
                "black": "#000000",
                "blue": "#4466EE",
                "blueDark": "#4455CC",
                "blueDarkest": "#2E374E",
                "blueLight": "#5577FF",
                "blueLighter": "#6688FF",
                "bronze": "#CC7700",
                "bronzeDark": "#AA5500",
                "bronzeLight": "#CC9900",
                "green": "#00AA44",
                "greenDark": "#008833",
                "greenLight": "#00BB44",
                "greenLighter": "#00CC66",
                "grey10": "#EEEEEE",
                "grey100": "#222222",
                "grey20": "#DDDDDD",
                "grey30": "#CCCCCC",
                "grey40": "#BBBBBB",
                "grey50": "#AAAAAA",
                "grey60": "#999999",
                "grey70": "#888888",
                "grey80": "#666666",
                "grey90": "#444444",
                "red": "#EE2200",
                "redDark": "#DD1100",
                "redLight": "#FF4444",
                "redLighter": "#FF6655",
                "white": "#FFFFFF",
                "white10": "#F5F5F5",
              },
              "fontSizes": Object {
                "size1": "0.75rem",
                "size2": "0.875rem",
                "size3": "1rem",
                "size4": "1.125rem",
                "size5": "1.375rem",
                "size6": "1.75rem",
                "size7": "2.125rem",
              },
              "fontWeights": Object {
                "bold": 700,
                "medium": 600,
                "regular": 400,
              },
              "iconFontPrefix": "fa",
              "lineHeights": Object {
                "large": 1.5,
                "small": 1.25,
              },
              "space": Object {
                "large": "1.5rem",
                "larger": "2rem",
                "largest": "4rem",
                "regular": "1rem",
                "small": "0.75rem",
                "smaller": "0.5rem",
                "smallest": "0.25rem",
              },
              "typography": Object {
                "text": Object {
                  "longForm": Object {
                    "color": "#222222",
                    "fontSize": "1rem",
                  },
                  "tiny": Object {
                    "color": "#666666",
                    "fontSize": "0.75rem",
                  },
                  "ui": Object {
                    "color": "#222222",
                    "fontSize": "0.875rem",
                  },
                },
              },
            }
          }
        >
          Hello World
        </ForwardRef(render)>
      }
      inertia={true}
      interactive={false}
      interactiveBorder={2}
      multiple={false}
      offset={0}
      onHidden={[Function]}
      onHide={[Function]}
      onRequestClose={[Function]}
      onShow={[Function]}
      onShown={[Function]}
      popperOptions={Object {}}
      position="top"
      size="regular"
      sticky={false}
      stickyDuration={200}
      style={Object {}}
      theme="arbor"
      touchHold={false}
      trigger="mouseenter focus"
      unmountHTMLWhenHide={false}
      updateDuration={0}
    >
      <div
        className=""
        style={
          Object {
            "display": "inline",
          }
        }
      >
        <p>
          I have a tooltip
        </p>
      </div>
    </Tooltip>
  </Tooltip>
</WithTheme(Tooltip)>
`;
